package eu.assuremoss.framework.model;

import lombok.Data;

import java.io.Serializable;

@Data
public class VulnerabilityEntry implements Serializable, Comparable {

    /**
     * Normal vulnerability name that is mapped with the magic name
     */
    private String type;
    /**
     * Magic vulnerability name that should be converted to normal
     */
    private String vulnType;
    private String description;
    private String path;
    private String className;
    private String variable;
    private int startLine;
    private int endLine;
    private int startCol;
    private int endCol;
    private int generatedPatches;
    private int filteredPatches;
    private int verifiedPatches;

    @Override
    public String toString() {
        return "VulnerabilityEntry\n" +
                " type=" + type + '\n' +
                " vulnType=" + vulnType + '\n' +
                " description=" + description + '\n' +
                " path=" + path + '\n' +
                " className=" + className + '\n' +
                " variable=" + variable + '\n' +
                " startLine=" + startLine + '\n' +
                " endLine=" + endLine + '\n' +
                " startCol=" + startCol + '\n' +
                " endCol=" + endCol;
    }

    @Override
    public int compareTo(Object o) {
        VulnerabilityEntry other = (VulnerabilityEntry) o;
        if (other.getType()!=null && type!=null && !other.getType().equals(type))
            return type.compareTo(other.getType());
        if (path != null && other.getPath() != null && !other.getPath().equals(path))
            return path.compareTo((other.getPath()));
        if (other.getStartLine() != startLine)
            return startLine < other.startLine? 1:-1;
        return 0;
    }

    public boolean equals(Object o) {
        if (this.compareTo(o)!=0) return false;
        else return true;
    }
}
